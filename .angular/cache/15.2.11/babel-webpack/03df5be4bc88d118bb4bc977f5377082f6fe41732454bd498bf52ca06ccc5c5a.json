{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction WeatherComponent_li_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 3);\n    i0.ɵɵlistener(\"click\", function WeatherComponent_li_6_Template_li_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const city_r2 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.showDetails(city_r2));\n    });\n    i0.ɵɵelementStart(1, \"div\", 6);\n    i0.ɵɵtext(2);\n    i0.ɵɵelement(3, \"img\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 8)(5, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function WeatherComponent_li_6_Template_button_click_5_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const city_r2 = restoredCtx.$implicit;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.refreshCity(city_r2));\n    });\n    i0.ɵɵelement(6, \"img\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function WeatherComponent_li_6_Template_button_click_7_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const i_r3 = restoredCtx.index;\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.deleteCity(i_r3));\n    });\n    i0.ɵɵelement(8, \"img\", 10);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const city_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate3(\" \", city_r2.name, \" - \", city_r2.temperature, \" \", city_r2.status, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"src\", city_r2.icon, i0.ɵɵsanitizeUrl);\n  }\n}\nfunction WeatherComponent_div_9_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"img\", 7);\n    i0.ɵɵelementStart(5, \"p\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const day_r9 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(3, 3, day_r9.date, \"shortDate\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"src\", day_r9.icon, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(day_r9.temp);\n  }\n}\nfunction WeatherComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11)(1, \"h3\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"img\", 7);\n    i0.ɵɵelementStart(4, \"p\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"p\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"p\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"p\");\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"div\", 12);\n    i0.ɵɵtemplate(13, WeatherComponent_div_9_div_13_Template, 7, 6, \"div\", 13);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r1.selectedCity.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"src\", ctx_r1.selectedCity.icon, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r1.selectedCity.temperature);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r1.selectedCity.status);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Wind: \", ctx_r1.selectedCity.windSpeed, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Pressure: \", ctx_r1.selectedCity.pressure, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.selectedCity.forecast);\n  }\n}\nexport let WeatherComponent = /*#__PURE__*/(() => {\n  class WeatherComponent {\n    constructor(http) {\n      this.http = http;\n      this.apiKey = 'd4594364698122bfd1c4b3eb5f2ff19f';\n      this.cityName = '';\n      this.cities = [];\n      this.selectedCity = null;\n    }\n    addCity() {\n      if (this.cityName.trim() === '') return;\n      this.http.get(`https://api.openweathermap.org/data/2.5/weather?q=${this.cityName}&appid=${this.apiKey}&units=metric`).subscribe(data => {\n        const city = {\n          name: data.name,\n          temperature: `${data.main.temp}°C`,\n          status: data.weather[0].description,\n          icon: `http://openweathermap.org/img/wn/${data.weather[0].icon}.png`,\n          windSpeed: `${data.wind.speed} m/s`,\n          pressure: `${data.main.pressure} hPa`,\n          forecast: []\n        };\n        this.cities.unshift(city);\n        if (this.cities.length > 8) this.cities.pop();\n        this.cityName = '';\n      }, error => {\n        alert('City not found');\n      });\n    }\n    deleteCity(index) {\n      this.cities.splice(index, 1);\n    }\n    clearAll() {\n      this.cities = [];\n      this.selectedCity = null;\n    }\n    refreshCity(city) {\n      this.http.get(`https://api.openweathermap.org/data/2.5/weather?q=${city.name}&appid=${this.apiKey}&units=metric`).subscribe(data => {\n        city.temperature = `${data.main.temp}°C`;\n        city.status = data.weather[0].description;\n        city.icon = `http://openweathermap.org/img/wn/${data.weather[0].icon}.png`;\n      });\n    }\n    showDetails(city) {\n      this.selectedCity = city;\n      this.http.get(`https://api.openweathermap.org/data/2.5/forecast?q=${city.name}&appid=${this.apiKey}&units=metric`).subscribe(data => {\n        this.selectedCity.forecast = data.list.slice(0, 5).map(d => ({\n          date: d.dt_txt,\n          temp: `${d.main.temp}°C`,\n          icon: `http://openweathermap.org/img/wn/${d.weather[0].icon}.png`\n        }));\n      });\n    }\n  }\n  WeatherComponent.ɵfac = function WeatherComponent_Factory(t) {\n    return new (t || WeatherComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n  };\n  WeatherComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: WeatherComponent,\n    selectors: [[\"app-weather\"]],\n    decls: 10,\n    vars: 3,\n    consts: [[1, \"weather-container\"], [1, \"left-panel\"], [\"type\", \"text\", \"placeholder\", \"Type city name\", 3, \"ngModel\", \"ngModelChange\"], [3, \"click\"], [3, \"click\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"right-panel\", 4, \"ngIf\"], [1, \"city\"], [3, \"src\"], [1, \"actions\"], [\"src\", \"assets/refresh-icon.png\"], [\"src\", \"assets/delete-icon.png\"], [1, \"right-panel\"], [1, \"forecast\"], [4, \"ngFor\", \"ngForOf\"]],\n    template: function WeatherComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"input\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function WeatherComponent_Template_input_ngModelChange_2_listener($event) {\n          return ctx.cityName = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function WeatherComponent_Template_button_click_3_listener() {\n          return ctx.addCity();\n        });\n        i0.ɵɵtext(4, \"+\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"ul\");\n        i0.ɵɵtemplate(6, WeatherComponent_li_6_Template, 9, 4, \"li\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function WeatherComponent_Template_button_click_7_listener() {\n          return ctx.clearAll();\n        });\n        i0.ɵɵtext(8, \"Clear All\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(9, WeatherComponent_div_9_Template, 14, 7, \"div\", 5);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.cityName);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.cities);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.selectedCity);\n      }\n    },\n    dependencies: [i2.NgForOf, i2.NgIf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel, i2.DatePipe],\n    styles: [\".weather-container[_ngcontent-%COMP%]{display:flex;justify-content:space-between;margin:20px}.left-panel[_ngcontent-%COMP%]{width:30%;border-right:1px solid #ccc;padding:10px}.left-panel[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{width:80%;padding:5px;margin-bottom:10px;border-radius:4px;border:1px solid #ccc}.left-panel[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{width:15%;padding:5px;margin-left:5px;background-color:#007bff;color:#fff;border:none;border-radius:4px;cursor:pointer}.left-panel[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]{list-style:none;padding:0}.left-panel[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:center;margin-bottom:10px;padding:5px;border-radius:4px;border:1px solid #e1e1e1;cursor:pointer;background-color:#f9f9f9}.left-panel[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]:hover{background-color:#f0f0f0}.left-panel[_ngcontent-%COMP%]   .actions[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{background:none;border:none;cursor:pointer;margin-left:5px}.right-panel[_ngcontent-%COMP%]{width:65%;padding:10px}.right-panel[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{margin-bottom:10px}.right-panel[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:100px;height:100px;margin-bottom:10px}.right-panel[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{margin:5px 0}.forecast[_ngcontent-%COMP%]{display:flex;justify-content:space-between;margin-top:20px}.forecast[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]{text-align:center}.forecast[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:50px;height:50px}\"]\n  });\n  return WeatherComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
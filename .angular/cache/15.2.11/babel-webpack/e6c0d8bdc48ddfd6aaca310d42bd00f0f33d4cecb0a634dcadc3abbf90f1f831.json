{"ast":null,"code":"import { createReducer, on } from '@ngrx/store';\nimport * as WeatherActions from './weather.actions';\nexport const initialState = {\n  cities: [],\n  selectedCity: null,\n  weatherDetails: null\n};\nexport const weatherReducer = createReducer(initialState, on(WeatherActions.addCity, (state, {\n  city\n}) => Object.assign(Object.assign({}, state), {\n  cities: [city, ...state.cities.slice(0, 7)]\n})), on(WeatherActions.deleteCity, (state, {\n  index\n}) => Object.assign(Object.assign({}, state), {\n  cities: state.cities.filter((_, i) => i !== index)\n})), on(WeatherActions.clearCities, state => Object.assign(Object.assign({}, state), {\n  cities: [],\n  selectedCity: null\n})), on(WeatherActions.refreshCity, (state, {\n  city\n}) => {\n  const updatedCities = state.cities.map(c => c.name === city.name ? city : c);\n  return Object.assign(Object.assign({}, state), {\n    cities: updatedCities\n  });\n}), on(WeatherActions.setSelectedCity, (state, {\n  city\n}) => Object.assign(Object.assign({}, state), {\n  selectedCity: city\n})), on(WeatherActions.loadWeatherDetails, (state, {\n  city,\n  forecast\n}) => Object.assign(Object.assign({}, state), {\n  weatherDetails: {\n    city,\n    forecast\n  }\n})));","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
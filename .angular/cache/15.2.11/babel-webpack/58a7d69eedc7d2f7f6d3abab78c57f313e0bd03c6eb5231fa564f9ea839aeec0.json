{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction WeatherComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵlistener(\"click\", function WeatherComponent_div_6_Template_div_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const location_r2 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.showDetails(location_r2));\n    });\n    i0.ɵɵelementStart(1, \"span\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"img\", 8);\n    i0.ɵɵelementStart(4, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function WeatherComponent_div_6_Template_button_click_4_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const location_r2 = restoredCtx.$implicit;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.refreshCity(location_r2));\n    });\n    i0.ɵɵtext(5, \"\\uD83D\\uDD04\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function WeatherComponent_div_6_Template_button_click_6_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const i_r3 = restoredCtx.index;\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.deleteCity(i_r3));\n    });\n    i0.ɵɵtext(7, \"\\u274C\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const location_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate3(\"\", location_r2.cityName, \" - \", location_r2.temperature, \" \", location_r2.status, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"src\", location_r2.icon, i0.ɵɵsanitizeUrl);\n  }\n}\nfunction WeatherComponent_div_9_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12)(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"img\", 8);\n    i0.ɵɵelementStart(4, \"p\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const day_r9 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(day_r9.date);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"src\", day_r9.icon, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", day_r9.temp, \"\\u00B0C\");\n  }\n}\nfunction WeatherComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9)(1, \"h3\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"img\", 8);\n    i0.ɵɵelementStart(4, \"p\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"p\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"h4\");\n    i0.ɵɵtext(9, \"5-Day Forecast\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"div\", 10);\n    i0.ɵɵtemplate(11, WeatherComponent_div_9_div_11_Template, 6, 3, \"div\", 11);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r1.selectedLocation.cityName);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"src\", ctx_r1.selectedLocation.icon, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r1.selectedLocation.temperature);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r1.selectedLocation.status);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.forecast);\n  }\n}\nexport let WeatherComponent = /*#__PURE__*/(() => {\n  class WeatherComponent {\n    constructor(http) {\n      this.http = http;\n      this.apiKey = 'd4594364698122bfd1c4b3eb5f2ff19f';\n      this.cityName = '';\n      this.locations = [];\n      this.forecast = [];\n    }\n    addCity() {\n      if (this.cityName.trim() === '') return;\n      this.http.get(`https://api.openweathermap.org/data/2.5/weather?q=${this.cityName}&appid=${this.apiKey}&units=metric`).subscribe({\n        next: data => {\n          const location = {\n            cityName: data.name,\n            temperature: `${data.main.temp}°C`,\n            status: data.weather[0].description,\n            icon: `http://openweathermap.org/img/wn/${data.weather[0].icon}.png`\n          };\n          this.locations.unshift(location);\n          if (this.locations.length > 8) this.locations.pop();\n          this.cityName = '';\n        },\n        error: err => {\n          alert('City not found!');\n          console.error(err);\n        }\n      });\n    }\n    refreshCity(location) {\n      this.http.get(`https://api.openweathermap.org/data/2.5/weather?q=${location.cityName}&appid=${this.apiKey}&units=metric`).subscribe({\n        next: data => {\n          location.temperature = `${data.main.temp}°C`;\n          location.status = data.weather[0].description;\n          location.icon = `http://openweathermap.org/img/wn/${data.weather[0].icon}.png`;\n        },\n        error: err => {\n          alert('Unable to refresh city data!');\n          console.error(err);\n        }\n      });\n    }\n    deleteCity(index) {\n      this.locations.splice(index, 1);\n      if (this.selectedLocation === this.locations[index]) {\n        this.selectedLocation = undefined;\n      }\n    }\n    clearAll() {\n      this.locations = [];\n      this.selectedLocation = undefined;\n      this.forecast = [];\n    }\n    showDetails(location) {\n      this.selectedLocation = location;\n      this.http.get(`https://api.openweathermap.org/data/2.5/forecast?q=${location.cityName}&appid=${this.apiKey}&units=metric`).subscribe({\n        next: data => {\n          this.forecast = data.list.slice(0, 5).map(item => ({\n            date: item.dt_txt.split(' ')[0],\n            temp: item.main.temp,\n            icon: `http://openweathermap.org/img/wn/${item.weather[0].icon}.png`\n          }));\n        },\n        error: err => {\n          alert('Unable to fetch forecast data!');\n          console.error(err);\n        }\n      });\n    }\n  }\n  WeatherComponent.ɵfac = function WeatherComponent_Factory(t) {\n    return new (t || WeatherComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n  };\n  WeatherComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: WeatherComponent,\n    selectors: [[\"app-weather\"]],\n    decls: 10,\n    vars: 3,\n    consts: [[1, \"weather-container\"], [1, \"left-panel\"], [\"type\", \"text\", \"placeholder\", \"Type city name\", 3, \"ngModel\", \"ngModelChange\"], [3, \"click\"], [1, \"location-list\"], [\"class\", \"location-item\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"right-panel\", 4, \"ngIf\"], [1, \"location-item\", 3, \"click\"], [\"alt\", \"icon\", 3, \"src\"], [1, \"right-panel\"], [1, \"forecast-list\"], [\"class\", \"forecast-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"forecast-item\"]],\n    template: function WeatherComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"input\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function WeatherComponent_Template_input_ngModelChange_2_listener($event) {\n          return ctx.cityName = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function WeatherComponent_Template_button_click_3_listener() {\n          return ctx.addCity();\n        });\n        i0.ɵɵtext(4, \"+\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 4);\n        i0.ɵɵtemplate(6, WeatherComponent_div_6_Template, 8, 4, \"div\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function WeatherComponent_Template_button_click_7_listener() {\n          return ctx.clearAll();\n        });\n        i0.ɵɵtext(8, \"Clear All\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(9, WeatherComponent_div_9_Template, 12, 5, \"div\", 6);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.cityName);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.locations);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.selectedLocation);\n      }\n    },\n    dependencies: [i2.NgForOf, i2.NgIf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel],\n    styles: [\".weather-container[_ngcontent-%COMP%]{display:flex}.left-panel[_ngcontent-%COMP%]{width:30%;padding:10px;border-right:1px solid #ccc}.right-panel[_ngcontent-%COMP%]{width:70%;padding:10px}.location-list[_ngcontent-%COMP%]{margin-top:10px}.location-item[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:center;margin-bottom:5px;cursor:pointer}.forecast-list[_ngcontent-%COMP%]{display:flex;gap:10px}.forecast-item[_ngcontent-%COMP%]{text-align:center}\"]\n  });\n  return WeatherComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { createReducer, on } from '@ngrx/store';\nimport { setCount, increment, decrement, reset, deleteCounter } from './counter.actions';\nexport const initialState = {\n  counters: []\n};\nconst _counterReducer = createReducer(initialState, on(setCount, (state, {\n  count\n}) => Object.assign(Object.assign({}, state), {\n  counters: [...state.counters, 0]\n})), on(increment, (state, {\n  index\n}) => {\n  const updatedCounters = [...state.counters];\n  updatedCounters[index]++;\n  return Object.assign(Object.assign({}, state), {\n    counters: updatedCounters\n  });\n}), on(decrement, (state, {\n  index\n}) => {\n  const updatedCounters = [...state.counters];\n  if (updatedCounters[index] > 0) {\n    updatedCounters[index]--;\n  }\n  return Object.assign(Object.assign({}, state), {\n    counters: updatedCounters\n  });\n}), on(deleteCounter, (state, {\n  index\n}) => Object.assign(Object.assign({}, state), {\n  counters: state.counters.filter((_, i) => i !== index)\n})), on(reset, () => initialState));\nexport function counterReducer(state, action) {\n  return _counterReducer(state, action);\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}